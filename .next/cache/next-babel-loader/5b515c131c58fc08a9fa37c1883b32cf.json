{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/brandontsang/projects/slate/src/components/dashboard/ContentManagerSubjectContent.tsx\";\nimport React, { useContext, useEffect, useRef } from 'react';\nimport ContentManagerArticle from './ContentManagerArticle';\nimport ContentManagerFolder from './ContentManagerFolder';\nimport { ContentManagerContext } from '../../contexts/contentManager';\nimport useReorder from '../../hooks/reorder';\nlet elementPositions = [];\nexport default function ContentManagerSubjectContent({\n  content,\n  isOpen\n}) {\n  const {\n    loadedContent,\n    loadContent\n  } = useContext(ContentManagerContext);\n  const childrenRef = useRef(null);\n\n  function updateYPositions(force = false) {\n    if ((!childrenRef.current || isReordering) && !force) return;\n    elementPositions = [];\n\n    for (let child of childrenRef.current.childNodes) {\n      let boundingBox = child.getBoundingClientRect();\n      elementPositions.push(boundingBox.bottom);\n    }\n\n    elementPositions.pop();\n    elementPositions.sort();\n\n    if (elementPositions.length === 0) {\n      elementPositions = [-100];\n    }\n  }\n\n  useEffect(updateYPositions, []);\n  const {\n    isReordering,\n    startReorder\n  } = useReorder(elementPositions);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: childrenRef,\n      children: content.map(uuid => {\n        let content = loadedContent.find(c => c.uuid === uuid);\n\n        if (typeof content === 'undefined') {\n          if (isOpen) loadContent(uuid);\n          return null;\n        } else if (content.type === 'folder') {\n          return /*#__PURE__*/_jsxDEV(ContentManagerFolder, {\n            folder: content,\n            isReordering: isReordering,\n            startReorder: startReorder,\n            updateYPositions: updateYPositions\n          }, uuid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this);\n        } else if (content.type === 'article') {\n          return /*#__PURE__*/_jsxDEV(ContentManagerArticle, {\n            article: content,\n            isReordering: isReordering,\n            startReorder: startReorder,\n            updateYPositions: updateYPositions\n          }, uuid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}","map":{"version":3,"sources":["/Users/brandontsang/projects/slate/src/components/dashboard/ContentManagerSubjectContent.tsx"],"names":["React","useContext","useEffect","useRef","ContentManagerArticle","ContentManagerFolder","ContentManagerContext","useReorder","elementPositions","ContentManagerSubjectContent","content","isOpen","loadedContent","loadContent","childrenRef","updateYPositions","force","current","isReordering","child","childNodes","boundingBox","getBoundingClientRect","push","bottom","pop","sort","length","startReorder","map","uuid","find","c","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,MAAtC,QAAmD,OAAnD;AAEA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAAQC,qBAAR,QAAoC,+BAApC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,IAAIC,gBAAgB,GAAG,EAAvB;AAEA,eAAe,SAASC,4BAAT,CAAsC;AACjDC,EAAAA,OADiD;AAEjDC,EAAAA;AAFiD,CAAtC,EAMZ;AACC,QAAM;AAACC,IAAAA,aAAD;AAAgBC,IAAAA;AAAhB,MAA+BZ,UAAU,CAACK,qBAAD,CAA/C;AACA,QAAMQ,WAAW,GAAGX,MAAM,CAAC,IAAD,CAA1B;;AAEA,WAASY,gBAAT,CAA0BC,KAAK,GAAG,KAAlC,EAAyC;AACrC,QAAI,CAAC,CAACF,WAAW,CAACG,OAAb,IAAwBC,YAAzB,KAA0C,CAACF,KAA/C,EAAsD;AAEtDR,IAAAA,gBAAgB,GAAG,EAAnB;;AACA,SAAK,IAAIW,KAAT,IAAkBL,WAAW,CAACG,OAAZ,CAAoBG,UAAtC,EAAkD;AAC9C,UAAIC,WAAW,GAAGF,KAAK,CAACG,qBAAN,EAAlB;AACAd,MAAAA,gBAAgB,CAACe,IAAjB,CAAsBF,WAAW,CAACG,MAAlC;AACH;;AACDhB,IAAAA,gBAAgB,CAACiB,GAAjB;AACAjB,IAAAA,gBAAgB,CAACkB,IAAjB;;AAEA,QAAIlB,gBAAgB,CAACmB,MAAjB,KAA4B,CAAhC,EAAmC;AAC/BnB,MAAAA,gBAAgB,GAAG,CAAC,CAAC,GAAF,CAAnB;AACH;AACJ;;AACDN,EAAAA,SAAS,CAACa,gBAAD,EAAmB,EAAnB,CAAT;AAEA,QAAM;AAACG,IAAAA,YAAD;AAAeU,IAAAA;AAAf,MAA+BrB,UAAU,CAACC,gBAAD,CAA/C;AAEA,sBACI;AAAA,2BACI;AAAK,MAAA,GAAG,EAAEM,WAAV;AAAA,gBACKJ,OAAO,CAACmB,GAAR,CAAaC,IAAD,IAAU;AACnB,YAAIpB,OAAO,GAAGE,aAAa,CAACmB,IAAd,CAAoBC,CAAD,IAAOA,CAAC,CAACF,IAAF,KAAWA,IAArC,CAAd;;AACA,YAAI,OAAOpB,OAAP,KAAmB,WAAvB,EAAoC;AAChC,cAAIC,MAAJ,EAAYE,WAAW,CAACiB,IAAD,CAAX;AACZ,iBAAO,IAAP;AACH,SAHD,MAGO,IAAIpB,OAAO,CAACuB,IAAR,KAAiB,QAArB,EAA+B;AAClC,8BACI,QAAC,oBAAD;AAEI,YAAA,MAAM,EAAEvB,OAFZ;AAGI,YAAA,YAAY,EAAEQ,YAHlB;AAII,YAAA,YAAY,EAAEU,YAJlB;AAKI,YAAA,gBAAgB,EAAEb;AALtB,aACSe,IADT;AAAA;AAAA;AAAA;AAAA,kBADJ;AASH,SAVM,MAUA,IAAIpB,OAAO,CAACuB,IAAR,KAAiB,SAArB,EAAgC;AACnC,8BACI,QAAC,qBAAD;AAEI,YAAA,OAAO,EAAEvB,OAFb;AAGI,YAAA,YAAY,EAAEQ,YAHlB;AAII,YAAA,YAAY,EAAEU,YAJlB;AAKI,YAAA,gBAAgB,EAAEb;AALtB,aACSe,IADT;AAAA;AAAA;AAAA;AAAA,kBADJ;AASH;AACJ,OA1BA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAiCH","sourcesContent":["import React, {useContext, useEffect, useRef} from 'react';\n\nimport ContentManagerArticle from './ContentManagerArticle';\nimport ContentManagerFolder from './ContentManagerFolder';\nimport {ContentManagerContext} from '../../contexts/contentManager';\nimport useReorder from '../../hooks/reorder';\n\nlet elementPositions = [] as number[];\n\nexport default function ContentManagerSubjectContent({\n    content,\n    isOpen\n}: {\n    content: string[];\n    isOpen: boolean;\n}) {\n    const {loadedContent, loadContent} = useContext(ContentManagerContext);\n    const childrenRef = useRef(null);\n\n    function updateYPositions(force = false) {\n        if ((!childrenRef.current || isReordering) && !force) return;\n\n        elementPositions = [];\n        for (let child of childrenRef.current.childNodes) {\n            let boundingBox = child.getBoundingClientRect();\n            elementPositions.push(boundingBox.bottom);\n        }\n        elementPositions.pop();\n        elementPositions.sort();\n\n        if (elementPositions.length === 0) {\n            elementPositions = [-100];\n        }\n    }\n    useEffect(updateYPositions, []);\n\n    const {isReordering, startReorder} = useReorder(elementPositions);\n\n    return (\n        <>\n            <div ref={childrenRef}>\n                {content.map((uuid) => {\n                    let content = loadedContent.find((c) => c.uuid === uuid);\n                    if (typeof content === 'undefined') {\n                        if (isOpen) loadContent(uuid);\n                        return null;\n                    } else if (content.type === 'folder') {\n                        return (\n                            <ContentManagerFolder\n                                key={uuid}\n                                folder={content}\n                                isReordering={isReordering}\n                                startReorder={startReorder}\n                                updateYPositions={updateYPositions}\n                            />\n                        );\n                    } else if (content.type === 'article') {\n                        return (\n                            <ContentManagerArticle\n                                key={uuid}\n                                article={content}\n                                isReordering={isReordering}\n                                startReorder={startReorder}\n                                updateYPositions={updateYPositions}\n                            />\n                        );\n                    }\n                })}\n            </div>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}