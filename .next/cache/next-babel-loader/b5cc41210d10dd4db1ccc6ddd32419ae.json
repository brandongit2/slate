{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/brandontsang/projects/slate/src/components/dashboard/ContentManagerFolder.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { motion, useDragControls } from 'framer-motion';\nimport { useContext, useEffect, useLayoutEffect, useReducer, useRef, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContentManagerArticle from './ContentManagerArticle';\nimport styles from './ContentManagerFolder.module.scss';\nimport { ContentManagerContext } from '../../contexts/contentManager';\nimport { getLastElement } from '../../misc/util';\nexport default function ContentManagerFolder({\n  folder,\n  isReordering,\n  startReorder,\n  updateYPositions,\n  editMode\n}) {\n  const {\n    user,\n    loadedContent,\n    loadContent,\n    fns: {\n      addObject,\n      removeObject,\n      modifyObject\n    }\n  } = useContext(ContentManagerContext);\n  const reorderButton = useRef(null);\n  const dragControls = useDragControls();\n  const {\n    0: isOpen,\n    1: toggleIsOpen\n  } = useReducer(state => !state, false);\n  const {\n    0: editing,\n    1: toggleEditing\n  } = useReducer(state => !state, editMode);\n  const {\n    0: selected,\n    1: setSelected\n  } = useState(false);\n  const {\n    0: name,\n    1: setName\n  } = useState(folder.name);\n  useEffect(() => {\n    setName(folder.name);\n  }, [folder]);\n  useLayoutEffect(updateYPositions);\n  useLayoutEffect(() => {\n    updateYPositions(true);\n  }, [isOpen]);\n\n  function saveEdit() {\n    toggleEditing();\n    modifyObject(folder, _objectSpread(_objectSpread({}, folder), {}, {\n      name\n    }));\n  }\n\n  function removeSelf() {\n    removeObject(folder, folder.parent);\n  }\n\n  function addFolder(parentUuid, after) {\n    addObject({\n      uuid: uuidv4(),\n      type: 'folder',\n      name: uuidv4(),\n      children: []\n    }, parentUuid, after);\n  }\n\n  function addArticle(parentUuid, after) {\n    addObject({\n      uuid: uuidv4(),\n      type: 'article',\n      name: uuidv4(),\n      author: user.name.toLowerCase(),\n      content: '',\n      children: []\n    }, parentUuid, after);\n  }\n\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: `folder ${styles.folder} ${isOpen ? '' : styles.collapsed} ${selected ? styles.selected : ''}`,\n    layoutId: folder.uuid,\n    transition: {\n      ease: 'easeInOut',\n      duration: isReordering ? 0.2 : 0\n    },\n    drag: true,\n    dragControls: dragControls,\n    onDragStart: (evt, info) => {\n      setSelected(true); // Prevent dragging unless event target is reorder button\n      // https://github.com/framer/motion/issues/363#issuecomment-621355442\n\n      if (evt.target !== reorderButton.current) {\n        dragControls.componentControls.forEach(entry => {\n          entry.stop(evt, info);\n        });\n        setSelected(false);\n        return;\n      }\n\n      if (startReorder) {\n        if (isOpen) toggleIsOpen();\n        startReorder(evt, folder);\n      }\n    },\n    onDragEnd: () => {\n      setSelected(false);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['folder--label'],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          placeSelf: 'stretch',\n          display: 'flex',\n          placeContent: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleIsOpen,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `material-icons-sharp ${styles['folder--expand-button']} ${isOpen ? styles.open : ''}`,\n            children: \"chevron_right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflow: 'hidden',\n          display: 'flex',\n          alignItems: 'center'\n        },\n        children: editing ? /*#__PURE__*/_jsxDEV(\"input\", {\n          className: styles['folder--name--editing'],\n          type: \"text\",\n          value: name,\n          onChange: evt => {\n            setName(evt.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles['folder--name'],\n          children: folder.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), editing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['folder--save-button'],\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveEdit,\n          children: \"save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles['folder__controls'],\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              addFolder(folder.uuid, getLastElement(folder.children) || '0');\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons-sharp\",\n              children: \"create_new_folder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              addArticle(folder.uuid, getLastElement(folder.children) || '0');\n            },\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons-sharp\",\n              children: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleEditing,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons-sharp\",\n              children: \"create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons-sharp\",\n              children: \"content_copy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: removeSelf,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons-sharp\",\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-icons-sharp\",\n              style: {\n                cursor: 'move'\n              },\n              ref: reorderButton,\n              children: \"drag_indicator\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['folder--rule']\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles['folder__children'],\n      children: folder.children.map(uuid => {\n        let content = loadedContent.find(c => c.uuid === uuid);\n\n        if (typeof content === 'undefined') {\n          if (isOpen) loadContent(uuid);\n          return null;\n        } else if (content.type === 'folder') {\n          return /*#__PURE__*/_jsxDEV(ContentManagerFolder, {\n            folder: content,\n            isReordering: isReordering,\n            startReorder: startReorder,\n            updateYPositions: updateYPositions\n          }, uuid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 29\n          }, this);\n        } else if (content.type === 'article') {\n          return /*#__PURE__*/_jsxDEV(ContentManagerArticle, {\n            article: content,\n            isReordering: isReordering,\n            startReorder: startReorder,\n            updateYPositions: updateYPositions\n          }, uuid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 29\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/Users/brandontsang/projects/slate/src/components/dashboard/ContentManagerFolder.tsx"],"names":["motion","useDragControls","useContext","useEffect","useLayoutEffect","useReducer","useRef","useState","v4","uuidv4","ContentManagerArticle","styles","ContentManagerContext","getLastElement","ContentManagerFolder","folder","isReordering","startReorder","updateYPositions","editMode","user","loadedContent","loadContent","fns","addObject","removeObject","modifyObject","reorderButton","dragControls","isOpen","toggleIsOpen","state","editing","toggleEditing","selected","setSelected","name","setName","saveEdit","removeSelf","parent","addFolder","parentUuid","after","uuid","type","children","addArticle","author","toLowerCase","content","collapsed","ease","duration","evt","info","target","current","componentControls","forEach","entry","stop","placeSelf","display","placeContent","open","overflow","alignItems","value","cursor","map","find","c"],"mappings":"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","sourcesContent":["import {motion, useDragControls} from 'framer-motion';\nimport {\n    useContext,\n    useEffect,\n    useLayoutEffect,\n    useReducer,\n    useRef,\n    useState\n} from 'react';\nimport {v4 as uuidv4} from 'uuid';\n\nimport ContentManagerArticle from './ContentManagerArticle';\nimport styles from './ContentManagerFolder.module.scss';\nimport {ContentManagerContext} from '../../contexts/contentManager';\nimport {Article, Folder} from '../../defs/content';\nimport {getLastElement} from '../../misc/util';\n\nexport default function ContentManagerFolder({\n    folder,\n    isReordering,\n    startReorder,\n    updateYPositions,\n    editMode\n}: {\n    folder: Folder;\n    isReordering: boolean;\n    startReorder: (evt: MouseEvent, content: Folder | Article) => void;\n    updateYPositions: (force?: boolean) => void;\n    editMode?: boolean;\n}) {\n    const {\n        user,\n        loadedContent,\n        loadContent,\n        fns: {addObject, removeObject, modifyObject}\n    } = useContext(ContentManagerContext);\n    const reorderButton = useRef(null);\n    const dragControls = useDragControls();\n\n    const [isOpen, toggleIsOpen] = useReducer((state) => !state, false);\n    const [editing, toggleEditing] = useReducer((state) => !state, editMode);\n\n    const [selected, setSelected] = useState(false);\n    const [name, setName] = useState(folder.name);\n\n    useEffect(() => {\n        setName(folder.name);\n    }, [folder]);\n    useLayoutEffect(updateYPositions);\n    useLayoutEffect(() => {\n        updateYPositions(true);\n    }, [isOpen]);\n\n    function saveEdit() {\n        toggleEditing();\n        modifyObject(folder, {...folder, name});\n    }\n\n    function removeSelf() {\n        removeObject(folder, folder.parent);\n    }\n\n    function addFolder(parentUuid: string, after: string) {\n        addObject(\n            {\n                uuid: uuidv4(),\n                type: 'folder',\n                name: uuidv4(),\n                children: []\n            },\n            parentUuid,\n            after\n        );\n    }\n\n    function addArticle(parentUuid: string, after: string) {\n        addObject(\n            {\n                uuid: uuidv4(),\n                type: 'article',\n                name: uuidv4(),\n                author: user.name.toLowerCase(),\n                content: '',\n                children: []\n            },\n            parentUuid,\n            after\n        );\n    }\n\n    return (\n        <motion.div\n            className={`folder ${styles.folder} ${\n                isOpen ? '' : styles.collapsed\n            } ${selected ? styles.selected : ''}`}\n            layoutId={folder.uuid}\n            transition={{ease: 'easeInOut', duration: isReordering ? 0.2 : 0}}\n            drag\n            dragControls={dragControls}\n            onDragStart={(evt, info) => {\n                setSelected(true);\n\n                // Prevent dragging unless event target is reorder button\n                // https://github.com/framer/motion/issues/363#issuecomment-621355442\n                if (evt.target !== reorderButton.current) {\n                    (dragControls as any).componentControls.forEach(\n                        (entry: any) => {\n                            entry.stop(evt, info);\n                        }\n                    );\n                    setSelected(false);\n                    return;\n                }\n\n                if (startReorder) {\n                    if (isOpen) toggleIsOpen();\n                    startReorder(evt as MouseEvent, folder);\n                }\n            }}\n            onDragEnd={() => {\n                setSelected(false);\n            }}\n        >\n            <div className={styles['folder--label']}>\n                <div\n                    style={{\n                        placeSelf: 'stretch',\n                        display: 'flex',\n                        placeContent: 'center'\n                    }}\n                >\n                    <button onClick={toggleIsOpen}>\n                        <span\n                            className={`material-icons-sharp ${\n                                styles['folder--expand-button']\n                            } ${isOpen ? styles.open : ''}`}\n                        >\n                            chevron_right\n                        </span>\n                    </button>\n                </div>\n                <div\n                    style={{\n                        overflow: 'hidden',\n                        display: 'flex',\n                        alignItems: 'center'\n                    }}\n                >\n                    {editing ? (\n                        <input\n                            className={styles['folder--name--editing']}\n                            type=\"text\"\n                            value={name}\n                            onChange={(evt) => {\n                                setName(evt.target.value);\n                            }}\n                        />\n                    ) : (\n                        <span className={styles['folder--name']}>\n                            {folder.name}\n                        </span>\n                    )}\n                </div>\n                {editing ? (\n                    <div className={styles['folder--save-button']}>\n                        <button onClick={saveEdit}>save</button>\n                    </div>\n                ) : (\n                    <div className={styles['folder__controls']}>\n                        <>\n                            <button\n                                onClick={() => {\n                                    addFolder(\n                                        folder.uuid,\n                                        getLastElement(folder.children) || '0'\n                                    );\n                                }}\n                            >\n                                <span className=\"material-icons-sharp\">\n                                    create_new_folder\n                                </span>\n                            </button>\n                            <button\n                                onClick={() => {\n                                    addArticle(\n                                        folder.uuid,\n                                        getLastElement(folder.children) || '0'\n                                    );\n                                }}\n                            >\n                                <span className=\"material-icons-sharp\">\n                                    description\n                                </span>\n                            </button>\n                            <button onClick={toggleEditing}>\n                                <span className=\"material-icons-sharp\">\n                                    create\n                                </span>\n                            </button>\n                            <button>\n                                <span className=\"material-icons-sharp\">\n                                    content_copy\n                                </span>\n                            </button>\n                            <button onClick={removeSelf}>\n                                <span className=\"material-icons-sharp\">\n                                    delete\n                                </span>\n                            </button>\n                            <button>\n                                <span\n                                    className=\"material-icons-sharp\"\n                                    style={{cursor: 'move'}}\n                                    ref={reorderButton}\n                                >\n                                    drag_indicator\n                                </span>\n                            </button>\n                        </>\n                    </div>\n                )}\n            </div>\n            <div className={styles['folder--rule']} />\n            <div className={styles['folder__children']}>\n                {folder.children.map((uuid) => {\n                    let content = loadedContent.find((c) => c.uuid === uuid);\n                    if (typeof content === 'undefined') {\n                        if (isOpen) loadContent(uuid);\n                        return null;\n                    } else if (content.type === 'folder') {\n                        return (\n                            <ContentManagerFolder\n                                key={uuid}\n                                folder={content}\n                                isReordering={isReordering}\n                                startReorder={startReorder}\n                                updateYPositions={updateYPositions}\n                            />\n                        );\n                    } else if (content.type === 'article') {\n                        return (\n                            <ContentManagerArticle\n                                key={uuid}\n                                article={content}\n                                isReordering={isReordering}\n                                startReorder={startReorder}\n                                updateYPositions={updateYPositions}\n                            />\n                        );\n                    }\n                })}\n            </div>\n        </motion.div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}