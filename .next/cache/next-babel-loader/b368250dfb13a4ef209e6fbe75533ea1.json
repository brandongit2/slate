{"ast":null,"code":"import { useContext, useState } from 'react';\nimport { ContentManagerContext } from '../contexts/contentManager';\nimport { sortedIndex } from '../misc/util';\nexport default function useReorder(elementPositions) {\n  const {\n    0: isReordering,\n    1: setIsReordering\n  } = useState(false);\n  const {\n    fns: {\n      moveObjectDown,\n      moveObjectUp\n    }\n  } = useContext(ContentManagerContext);\n\n  function startReorder(evt, object) {\n    setIsReordering(true);\n    let prevMousePos = sortedIndex(elementPositions, evt.clientY);\n\n    function handleMouseMove(evt) {\n      let curMousePos = sortedIndex(elementPositions, evt.clientY);\n\n      if (curMousePos !== prevMousePos) {\n        if (curMousePos - prevMousePos === 1) {\n          moveObjectDown(object);\n        } else if (curMousePos - prevMousePos === -1) {\n          moveObjectUp(object);\n        }\n\n        prevMousePos = curMousePos;\n      }\n    }\n\n    function stopReorder() {\n      window.removeEventListener('mousemove', handleMouseMove);\n      window.removeEventListener('mouseup', stopReorder);\n      setIsReordering(false);\n    }\n\n    window.addEventListener('mousemove', handleMouseMove);\n    window.addEventListener('mouseup', stopReorder);\n  }\n\n  return {\n    startReorder,\n    isReordering\n  };\n}","map":{"version":3,"sources":["/Users/brandontsang/projects/slate/src/hooks/reorder.ts"],"names":["useContext","useState","ContentManagerContext","sortedIndex","useReorder","elementPositions","isReordering","setIsReordering","fns","moveObjectDown","moveObjectUp","startReorder","evt","object","prevMousePos","clientY","handleMouseMove","curMousePos","stopReorder","window","removeEventListener","addEventListener"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,QAApB,QAAmC,OAAnC;AAEA,SAAQC,qBAAR,QAAoC,4BAApC;AAEA,SAAQC,WAAR,QAA0B,cAA1B;AAEA,eAAe,SAASC,UAAT,CAAoBC,gBAApB,EAAgD;AAC3D,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCN,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM;AACFO,IAAAA,GAAG,EAAE;AAACC,MAAAA,cAAD;AAAiBC,MAAAA;AAAjB;AADH,MAEFV,UAAU,CAACE,qBAAD,CAFd;;AAIA,WAASS,YAAT,CAAsBC,GAAtB,EAAuCC,MAAvC,EAAwD;AACpDN,IAAAA,eAAe,CAAC,IAAD,CAAf;AAEA,QAAIO,YAAY,GAAGX,WAAW,CAACE,gBAAD,EAAmBO,GAAG,CAACG,OAAvB,CAA9B;;AAEA,aAASC,eAAT,CAAyBJ,GAAzB,EAA0C;AACtC,UAAIK,WAAW,GAAGd,WAAW,CAACE,gBAAD,EAAmBO,GAAG,CAACG,OAAvB,CAA7B;;AACA,UAAIE,WAAW,KAAKH,YAApB,EAAkC;AAC9B,YAAIG,WAAW,GAAGH,YAAd,KAA+B,CAAnC,EAAsC;AAClCL,UAAAA,cAAc,CAACI,MAAD,CAAd;AACH,SAFD,MAEO,IAAII,WAAW,GAAGH,YAAd,KAA+B,CAAC,CAApC,EAAuC;AAC1CJ,UAAAA,YAAY,CAACG,MAAD,CAAZ;AACH;;AACDC,QAAAA,YAAY,GAAGG,WAAf;AACH;AACJ;;AAED,aAASC,WAAT,GAAuB;AACnBC,MAAAA,MAAM,CAACC,mBAAP,CAA2B,WAA3B,EAAwCJ,eAAxC;AACAG,MAAAA,MAAM,CAACC,mBAAP,CAA2B,SAA3B,EAAsCF,WAAtC;AACAX,MAAAA,eAAe,CAAC,KAAD,CAAf;AACH;;AAEDY,IAAAA,MAAM,CAACE,gBAAP,CAAwB,WAAxB,EAAqCL,eAArC;AACAG,IAAAA,MAAM,CAACE,gBAAP,CAAwB,SAAxB,EAAmCH,WAAnC;AACH;;AAED,SAAO;AAACP,IAAAA,YAAD;AAAeL,IAAAA;AAAf,GAAP;AACH","sourcesContent":["import {useContext, useState} from 'react';\n\nimport {ContentManagerContext} from '../contexts/contentManager';\nimport {Content} from '../defs/content';\nimport {sortedIndex} from '../misc/util';\n\nexport default function useReorder(elementPositions: number[]) {\n    const [isReordering, setIsReordering] = useState(false);\n    const {\n        fns: {moveObjectDown, moveObjectUp}\n    } = useContext(ContentManagerContext);\n\n    function startReorder(evt: MouseEvent, object: Content) {\n        setIsReordering(true);\n\n        let prevMousePos = sortedIndex(elementPositions, evt.clientY);\n\n        function handleMouseMove(evt: MouseEvent) {\n            let curMousePos = sortedIndex(elementPositions, evt.clientY);\n            if (curMousePos !== prevMousePos) {\n                if (curMousePos - prevMousePos === 1) {\n                    moveObjectDown(object);\n                } else if (curMousePos - prevMousePos === -1) {\n                    moveObjectUp(object);\n                }\n                prevMousePos = curMousePos;\n            }\n        }\n\n        function stopReorder() {\n            window.removeEventListener('mousemove', handleMouseMove);\n            window.removeEventListener('mouseup', stopReorder);\n            setIsReordering(false);\n        }\n\n        window.addEventListener('mousemove', handleMouseMove);\n        window.addEventListener('mouseup', stopReorder);\n    }\n\n    return {startReorder, isReordering};\n}\n"]},"metadata":{},"sourceType":"module"}