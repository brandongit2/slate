{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/brandon/slate/src/components/SubjectCard.tsx\";\nimport { useEffect, useState } from 'react';\nimport styles from './SubjectCard.module.scss';\nimport { convertRemToPixels } from '../misc/util';\nconst width = 20;\nexport default function SubjectDescription({\n  name,\n  description,\n  color\n}) {\n  // Break subject header into multiple lines if necessary.\n  const {\n    0: nameBroken,\n    1: setNameBroken\n  } = useState([name, '']);\n  useEffect(() => {\n    let el = document.createElement('p');\n    el.style.fontSize = '200%';\n    el.style.fontWeight = '800';\n    el.style.position = 'fixed';\n    document.body.appendChild(el);\n    let broken = name.split(String.fromCharCode(0xad));\n    let str = '';\n    let len = 0;\n\n    for (let frag of broken) {\n      str += frag;\n      el.innerHTML = str; // Subject name cannot exceed 70% width of parent\n\n      if (el.clientWidth > convertRemToPixels(width - 2) * 0.7) {\n        // If the second line would be awkwardly short\n        if (name.length - len < 3) len = str.length;\n        break;\n      }\n\n      len = str.length;\n    }\n\n    el.remove();\n    name = name.replaceAll(String.fromCharCode(0xad), '');\n    setNameBroken([name.slice(0, len), name.slice(len)]);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.animation,\n      style: {\n        width: `${width}rem`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)'\n        },\n        children: \"[PLACEHOLDER]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.info,\n      style: {\n        width: `${width - 2}rem`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: styles['info--description'],\n        style: {\n          color: `#${color}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles['info--title'],\n          style: {\n            background: `#${color}`\n          },\n          children: nameBroken[0] + (nameBroken[1] === '' ? '' : '-')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles['info--title'],\n          style: {\n            clear: 'left',\n            background: `#${color}`\n          },\n          children: nameBroken[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/home/brandon/slate/src/components/SubjectCard.tsx"],"names":["useEffect","useState","styles","convertRemToPixels","width","SubjectDescription","name","description","color","nameBroken","setNameBroken","el","document","createElement","style","fontSize","fontWeight","position","body","appendChild","broken","split","String","fromCharCode","str","len","frag","innerHTML","clientWidth","length","remove","replaceAll","slice","animation","top","left","transform","info","background","clear"],"mappings":"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","sourcesContent":["import {useEffect, useState} from 'react';\n\nimport styles from './SubjectCard.module.scss';\nimport {convertRemToPixels} from '../misc/util';\n\nconst width = 20;\n\nexport default function SubjectDescription({\n    name,\n    description,\n    color\n}: {\n    name: string;\n    description: string;\n    color: string;\n}) {\n    // Break subject header into multiple lines if necessary.\n    const [nameBroken, setNameBroken] = useState([name, '']);\n    useEffect(() => {\n        let el = document.createElement('p');\n        el.style.fontSize = '200%';\n        el.style.fontWeight = '800';\n        el.style.position = 'fixed';\n        document.body.appendChild(el);\n\n        let broken = name.split(String.fromCharCode(0xad));\n        let str = '';\n        let len = 0;\n        for (let frag of broken) {\n            str += frag;\n            el.innerHTML = str;\n\n            // Subject name cannot exceed 70% width of parent\n            if (el.clientWidth > convertRemToPixels(width - 2) * 0.7) {\n                // If the second line would be awkwardly short\n                if (name.length - len < 3) len = str.length;\n\n                break;\n            }\n            len = str.length;\n        }\n\n        el.remove();\n\n        name = name.replaceAll(String.fromCharCode(0xad), '');\n        setNameBroken([name.slice(0, len), name.slice(len)]);\n    }, []);\n\n    return (\n        <>\n            <div\n                className={styles.animation}\n                style={{\n                    width: `${width}rem`\n                }}\n            >\n                <span\n                    style={{\n                        position: 'absolute',\n                        top: '50%',\n                        left: '50%',\n                        transform: 'translate(-50%, -50%)'\n                    }}\n                >\n                    [PLACEHOLDER]\n                </span>\n            </div>\n            <div\n                className={styles.info}\n                style={{\n                    width: `${width - 2}rem`\n                }}\n            >\n                <p\n                    className={styles['info--description']}\n                    style={{\n                        color: `#${color}`\n                    }}\n                >\n                    <span\n                        className={styles['info--title']}\n                        style={{\n                            background: `#${color}`\n                        }}\n                    >\n                        {nameBroken[0] + (nameBroken[1] === '' ? '' : '-')}\n                    </span>\n                    <span\n                        className={styles['info--title']}\n                        style={{\n                            clear: 'left',\n                            background: `#${color}`\n                        }}\n                    >\n                        {nameBroken[1]}\n                    </span>\n                    {description}\n                </p>\n            </div>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}